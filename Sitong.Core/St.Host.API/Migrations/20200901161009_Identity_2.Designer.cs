// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using St.Host.API.CodeFirst.EntityFrameWorkCore;

namespace St.Host.API.Migrations
{
    [DbContext(typeof(StMigrationDbContext))]
    [Migration("20200901161009_Identity_2")]
    partial class Identity_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("St.DoMain.Model.Identity.APIManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApiUrl")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("接口地址");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("详细说明");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifierTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasComment("功能名称");

                    b.HasKey("Id");

                    b.ToTable("APIManagement");
                });

            modelBuilder.Entity("St.DoMain.Model.Identity.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasComment("详细说明");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("ICon矢量图标");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit")
                        .HasComment("是否锁定");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifierTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuType")
                        .HasColumnType("int")
                        .HasComment("菜单类型 2模块 4方法/接口一类");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasComment("菜单名称");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasComment("排列顺序");

                    b.Property<string>("SuperiorId")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasComment("父级编号");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("ICon矢量图标");

                    b.HasKey("Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("St.DoMain.Model.Identity.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit")
                        .HasComment("是否管理员 True=是/Flase=不是");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifierTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasComment("角色名称");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("St.DoMain.Model.Identity.RoleAPIManagement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("APIId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("接口编号");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifierTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("角色编号");

                    b.HasKey("Id");

                    b.ToTable("RoleAPIManagement");
                });

            modelBuilder.Entity("St.DoMain.Model.Identity.RoleMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifierTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("菜单编号");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("角色编号");

                    b.HasKey("Id");

                    b.ToTable("RoleMenu");
                });

            modelBuilder.Entity("St.DoMain.Model.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasComment("账户名");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasComment("邮箱账户");

                    b.Property<string>("HeadPic")
                        .HasColumnType("varchar(150)")
                        .HasComment("用户头像");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFreeze")
                        .HasColumnType("bit")
                        .HasComment("是否冻结,True=冻结/False=未冻结");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifierTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("varchar(26)")
                        .HasComment("昵称");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasComment("密码");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasComment("手机号码");

                    b.Property<bool>("Sex")
                        .HasColumnType("bit")
                        .HasComment("性别,True=男/False=女");

                    b.Property<bool>("TwoFactorVerifyEnable")
                        .HasColumnType("bit")
                        .HasComment("是否开启双因子验证");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("St.DoMain.Model.Identity.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifierTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("角色主键");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("管理员主键");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
